name: Sync Upstream and Trigger Build

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:        # 支持手动触发

jobs:
  sync-and-build:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出当前仓库
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录



      # 步骤2：添加上游仓库远程
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Ziayongyao/Sesame-TK.git
          git fetch upstream

      # 新增：配置 sparse-checkout 排除 .github/workflows
      - name: Configure sparse checkout
        run: |
          git config core.sparseCheckout true
          echo "!.github/workflows" >> .git/info/sparse-checkout
          git read-tree -mu HEAD

      # 步骤3：检查是否有新提交（优化比较逻辑）
      - name: Check for new commits
        id: check-commits
        run: |
          LOCAL_COMMIT=$(git rev-parse HEAD)
          UPSTREAM_COMMIT=$(git rev-parse upstream/main)
          if [ "$LOCAL_COMMIT" = "$UPSTREAM_COMMIT" ]; then
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
          else
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
          fi

      # 新增：配置本地仓库用户信息
      - name: Configure local user email
        run: git config user.email "sync-bot@example.com"

      - name: Configure local user name
        run: git config user.name "Sync Bot"

      # 修改：使用变基(rebase)替代重置(reset)
      - name: Rebase onto upstream
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git rebase upstream/main

      # 步骤5：推送更改
      - name: Force push changes
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git push origin main --force

      # 步骤6：触发build_release工作流
      - name: Trigger build workflow
        if: steps.check-commits.outputs.has_new_commits == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build_release.yml',
              ref: 'main'
            })
