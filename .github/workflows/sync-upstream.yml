name: 定时同步上游

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:        # 支持手动触发

jobs:
  sync-and-build:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出当前仓库
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      # 步骤2：添加上游仓库远程
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Ziayongyao/Sesame-TK.git
          git fetch upstream

      # 步骤3：检查是否有新提交（优化比较逻辑）
      - name: Check for new commits
        id: check-commits
        run: |
          # 获取上游最新提交
          git fetch upstream
          # 检查上游提交是否为本地历史的祖先
          if git merge-base --is-ancestor upstream/main HEAD; then
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
          else
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
          fi

      # 新增：配置本地仓库用户信息
      - name: Configure local user email
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git config --local user.email "sync-bot@example.com"
          git config --local user.name "Sync Bot"

      # 修改：使用变基(rebase)替代重置(reset)
      - name: Rebase onto upstream
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git rebase --reapply-cherry-picks upstream/main

      # 步骤4：推送更改
      - name: Push changes
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git push origin main

      # 步骤6：触发build_release工作流
      - name: Trigger build workflow
        if: steps.check-commits.outputs.has_new_commits == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build_release.yml',
              ref: 'main'
            })
