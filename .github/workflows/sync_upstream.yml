name: 🔄 同步上游仓库

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

env:
  UPSTREAM_REPO: Ziayongyao/Sesame-TK

jobs:
  sync-check:
    runs-on: ubuntu-latest
    name: 🔍 同步检查
    
    outputs:
      new_commit: ${{ steps.check_new.outputs.new_commit }}
    
    steps:
      - name: 📦 检出本地仓库
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🛠️ 设置 Git 权限
        run: |
          git config --global user.name "Sesame-TK Bot"
          git config --global user.email "bot@sesame-tk.com"

      - name: 📥 获取本地提交记录
        run: |
          git log --pretty=format:"%H" > local_hashes.txt
          echo "本地提交记录已保存"

      - name: 🌐 获取上游最新提交
        id: get_upstream
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ env.UPSTREAM_REPO }}/commits")
          latest_hash=$(echo $response | jq -r '.[0].sha')
          echo "latest_hash=$latest_hash" >> $GITHUB_ENV
          echo "获取上游最新提交: $latest_hash"

      - name: 🔍 检查新提交
        id: check_new
        run: |
          if grep -q "$latest_hash" local_hashes.txt; then
            echo "无需同步，已在本地存在"
            echo "new_commit=false" >> $GITHUB_OUTPUT
          else
            echo "发现新提交，继续执行"
            echo "new_commit=true" >> $GITHUB_OUTPUT
          fi

  merge-workflow:
    runs-on: ubuntu-latest
    name: 🔄 分支合并
    needs: sync-check
    if: ${{ needs.sync-check.outputs.new_commit == 'true' }}
    permissions:
      contents: write
      actions: write
    
    steps:
      - name: 📦 检出主分支
        uses: actions/checkout@v3
        with:
          ref: main
          path: main-branch

      - name: 🧩 检出上游分支
        uses: actions/checkout@v3
        with:
          repository: ${{ env.UPSTREAM_REPO }}
          ref: main
          path: upstream-branch
          fetch-depth: 0

      - name: 🔀 合并上游改动
        run: |
          MAIN_PATH=$GITHUB_WORKSPACE/main-branch
          UPSTREAM_PATH=$GITHUB_WORKSPACE/upstream-branch
          cd $MAIN_PATH
          git config --local user.name "Sesame-TK Bot"
          git config --local user.email "bot@sesame-tk.com"
          git remote add upstream file://$UPSTREAM_PATH
          git fetch upstream +refs/heads/*:refs/remotes/upstream/*
          git checkout -b upstream-main upstream/main
          git checkout main
          git merge --no-commit --allow-unrelated-histories \
            -s recursive -X ours upstream-main
          git checkout main -- .github/workflows/*
          git commit -m "Merge upstream changes, keep local workflows"
          git push origin main

      - name: 🚀 触发构建流程
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build_release.yml',
              ref: 'main'
            })
