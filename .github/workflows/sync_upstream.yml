name: 定时同步上游

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:        # 支持手动触发

jobs:
  sync-and-build:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出当前仓库
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      # 步骤2：添加上游仓库远程
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Fansirsqi/Sesame-TK.git
          git fetch upstream

      # 修改：优化 sparse-checkout 配置逻辑（核心调整点）
      - name: Configure sparse checkout
        run: |
          git config core.sparseCheckout true
          echo "/*" > .git/info/sparse-checkout         # 匹配根目录所有文件/目录
          echo "!/.github" >> .git/info/sparse-checkout # 排除根目录.github
          git read-tree -mu HEAD

      # 步骤3：检查是否有新提交（优化比较逻辑）
      - name: Check for new commits
        id: check-commits
        run: |
          # 获取上游完整历史记录并强制更新远程分支引用
          git fetch upstream --no-filter --prune +refs/heads/*:refs/remotes/upstream/*
          
          # 获取当前HEAD和上游main的commit hash
          current_commit=$(git rev-parse HEAD)
          upstream_commit=$(git rev-parse upstream/main)
          
          # 输出commit hash用于验证
          echo "Current HEAD commit: $current_commit"
          echo "Upstream main commit: $upstream_commit"
          
          # 直接比较commit hash（更直观可靠的判断方式）
          if [ "$current_commit" != "$upstream_commit" ]; then
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
            echo "Commits differ: new changes detected in upstream/main"
          else
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
            echo "No new changes detected in upstream/main"
          fi

      # 新增：配置本地仓库用户信息
      - name: Configure local user email
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git config --local user.email "sync-bot@example.com"
          git config --local user.name "Sync Bot"

      # 修改：使用快进合并替代变基（解决冲突问题）
      - name: Merge upstream changes
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git merge --ff-only upstream/main

      # 新增：强制刷新工作树状态
      - name: Refresh working tree
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git read-tree -mu HEAD

      # 步骤5：推送更改
      - name: Force push changes
        if: steps.check-commits.outputs.has_new_commits == 'true'
        run: |
          git push origin main --force

      # 步骤6：触发build_release工作流
      - name: Trigger build workflow
        if: steps.check-commits.outputs.has_new_commits == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build_release.yml',
              ref: 'main'
            })
