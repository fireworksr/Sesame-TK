# 同步上游仓库并自动构建工作流
name: Sync with Upstream and Build

on:
  # 每6小时自动触发
  schedule:
    - cron: '0 0/6 * * *'
  # 支持手动触发
  workflow_dispatch:

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出当前仓库
        uses: actions/checkout@v3
        with:
          path: sesame-tk

      - name: 设置Git用户信息
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: 检出上游仓库（排除工作流目录）
        uses: actions/checkout@v3
        with:
          repository: Ziayongyao/Sesame-TK
          path: upstream
          fetch-depth: 0
          exclude-path: .github/workflows

      - name: 进入工作区
        run: |
          cd sesame-tk
          git remote add upstream ../upstream
          git fetch upstream

      - name: 检测是否有新提交
        id: check-commits
        run: |
          cd sesame-tk
          LOCAL=$(git rev-parse HEAD)
          REMOTE=$(git rev-parse upstream/main)
          if [ "$LOCAL" != "$REMOTE" ]; then
            echo "有新提交需要合并"
            echo "::set-output name=has_new::true"
          else
            echo "没有新提交"
            echo "::set-output name=has_new::false"
          fi

      - name: 智能合并上游变更（变基模式）
        if: steps.check-commits.outputs.has_new == 'true'
        run: |
          cd sesame-tk
          git config pull.rebase true
          git config rebase.autoStash true
          git config rerere.enabled true
          git pull --rebase upstream main || {
            echo "检测到冲突，尝试解决..."
            git checkout --ours .github/workflows/sync_upstream.yml README.md
            git add .github/workflows/sync_upstream.yml README.md
            git rebase --continue
          }

      - name: 提交合并结果
        if: steps.check-commits.outputs.has_new == 'true'
        run: |
          cd sesame-tk
          git add .
          git commit -m "自动合并上游更新" || echo "没有需要提交的变更"
          git push origin main

      - name: 触发构建工作流
        if: steps.check-commits.outputs.has_new == 'true'
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"event_type": "build_release"}' \
          "https://api.github.com/repos/${{ github.repository }}/dispatches"
